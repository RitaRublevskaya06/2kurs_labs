USE UNIVER;

-- 1.  Запрос для вычисления максимальной, минимальной, средней вместимости, суммарной вместимости и общего количества аудиторий для каждого типа
SELECT 
    AT.AUDITORIUM_TYPENAME, 
    MAX(A.AUDITORIUM_CAPACITY) AS MAX_CAPACITY,
    MIN(A.AUDITORIUM_CAPACITY) AS MIN_CAPACITY,
    AVG(A.AUDITORIUM_CAPACITY) AS AVG_CAPACITY,
    SUM(A.AUDITORIUM_CAPACITY) AS TOTAL_CAPACITY,
    COUNT(A.AUDITORIUM) AS AUDITORIUM_COUNT
FROM 
    AUDITORIUM A
INNER JOIN 
    AUDITORIUM_TYPE AT ON A.AUDITORIUM_TYPE = AT.AUDITORIUM_TYPE
GROUP BY 
    AT.AUDITORIUM_TYPENAME;


-- 2. Запрос на основе таблицы PROGRESS для вычисления количества экзаменационных оценок в заданном интервале.
SELECT 
    GRADE,
    COUNT(*) AS GRADE_COUNT
FROM 
    (SELECT 
        CASE 
            WHEN NOTE BETWEEN 5 AND 6 THEN '5-6'
            WHEN NOTE BETWEEN 7 AND 8 THEN '7-8'
            WHEN NOTE BETWEEN 9 AND 10 THEN '9-10'
            ELSE 'Другие'
        END AS GRADE
    FROM 
        PROGRESS) AS Subquery
GROUP BY 
    GRADE
ORDER BY 
    GRADE DESC;


-- 3. Запрос для вычисления средней экзаменационной оценки для каждого курса, специальности и факультета.
SELECT 
    F.FACULTY_NAME,
    G.PROFESSION, 
    AVG(P.NOTE) AS AVG_GRADE 
FROM 
    FACULTY F
INNER JOIN  
    GROUPS G ON F.FACULTY = G.FACULTY 
INNER JOIN 
    STUDENT S ON G.IDGROUP = S.IDGROUP 
INNER JOIN 
    PROGRESS P ON S.IDSTUDENT = P.IDSTUDENT
GROUP BY 
    F.FACULTY_NAME, G.PROFESSION  
ORDER BY 
    AVG_GRADE DESC;


-- 4. Запрос для использования только дисциплин с кодами БД и ОАиП при расчете средней оценки.
SELECT 
    F.FACULTY_NAME,
    G.IDGROUP,
    AVG(P.NOTE) AS AVG_GRADE
FROM 
    FACULTY F
INNER JOIN 
    GROUPS G ON F.FACULTY = G.FACULTY
INNER JOIN 
    STUDENT S ON G.IDGROUP = S.IDGROUP
INNER JOIN 
    PROGRESS P ON S.IDSTUDENT = P.IDSTUDENT 
INNER JOIN 
    SUBJECT SUB ON P.SUBJECT = SUB.SUBJECT
WHERE 
    P.SUBJECT IN ('DB', 'OAP')
GROUP BY 
    F.FACULTY_NAME, G.IDGROUP
ORDER BY 
    AVG_GRADE DESC;


-- 5. Запрос для вывода специальности, дисциплин и средних оценок на факультете ТОВ.
SELECT 
    F.FACULTY,
    PR.PROFESSION_NAME AS SPECIALTY_NAME,
    SUB.SUBJECT_NAME AS DISCIPLINE_NAME,
    AVG(P.NOTE) AS AVG_GRADE
FROM 
    FACULTY F
LEFT JOIN 
    GROUPS G ON F.FACULTY = G.FACULTY
LEFT JOIN 
    STUDENT ST ON G.IDGROUP = ST.IDGROUP
LEFT JOIN 
    PROGRESS P ON ST.IDSTUDENT = P.IDSTUDENT
LEFT JOIN 
    PROFESSION PR ON G.PROFESSION = PR.PROFESSION
LEFT JOIN 
    SUBJECT SUB ON P.SUBJECT = SUB.SUBJECT
WHERE 
    F.FACULTY = 'TOV'
GROUP BY 
    F.FACULTY, PR.PROFESSION_NAME, SUB.SUBJECT_NAME
ORDER BY 
    AVG_GRADE DESC;


-- 6. Запрос для вычисления количества студентов, получивших оценки 8 и 9 по дисциплинам.
SELECT 
    SUB.SUBJECT_NAME AS DISCIPLINE_NAME, 
    COUNT(*) AS STUDENT_COUNT
FROM 
    PROGRESS P
INNER JOIN 
    SUBJECT SUB ON P.SUBJECT = SUB.SUBJECT 
WHERE 
    P.NOTE IN (8, 9) 
GROUP BY 
    SUB.SUBJECT_NAME
HAVING 
    COUNT(*) >= 1
ORDER BY 
    SUB.SUBJECT_NAME;


---- 3.2
--SELECT 
--    F.FACULTY_NAME,
--    G.PROFESSION, 
--    AVG(P.NOTE) AS AVG_GRADE 
--FROM 
--    FACULTY F
--LEFT JOIN 
--    GROUPS G ON F.FACULTY = G.FACULTY 
--LEFT JOIN 
--    STUDENT S ON G.IDGROUP = S.IDGROUP
--LEFT JOIN 
--    PROGRESS P ON S.IDSTUDENT = P.IDSTUDENT
--GROUP BY 
--    F.FACULTY_NAME, G.PROFESSION  
--ORDER BY 
--    AVG_GRADE DESC;
