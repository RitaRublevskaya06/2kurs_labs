1. Компоненты системы:
Веб-интерфейс (UI)

Это клиентская часть приложения, через которую пользователи взаимодействуют с системой.

Примеры функций: регистрация, просмотр врачей, бронирование талонов.

Реализован на технологиях вроде WPF/XAML, React или Angular.

Сервер приложений (Server)

Обрабатывает бизнес-логику: авторизацию, управление записями, валидацию данных.

Использует C# или другой серверный язык.

Взаимодействует с базой данных и внешними сервисами.

База данных (DB)

Хранит данные системы.

Таблицы:

Clients: данные пациентов (имя, email, пароль).

Doctors: информация о врачах (специализация, расписание).

Orders: записи на прием.

Procedures: перечень медицинских услуг.

Используется СУБД, например, MS SQL Server или PostgreSQL.

Email-сервис (Email)

Отправляет уведомления: подтверждение бронирования, напоминания о приеме.

Интегрируется через SMTP или сторонние API (Mailgun, SendGrid).

2. Связи между компонентами:
UI --> Server: HTTP-запросы
Веб-интерфейс отправляет запросы серверу (например, при бронировании талона).

Server --> DB: ADO.NET
Сервер взаимодействует с базой данных через технологию ADO.NET для выполнения SQL-запросов (SELECT, INSERT, UPDATE).

Server --> Email: API (SMTP)
Сервер отправляет письма через SMTP-протокол или REST API email-сервиса.









@startuml
!theme plain
[Веб-интерфейс] as UI
[Сервер приложений] as Server
[База данных] as DB
[Email-сервис] as Email

UI --> Server : HTTP-запросы
Server --> DB : ADO.NET
Server --> Email : API (SMTP)

note right of DB
  Таблицы:
  Clients, Doctor,
  Order, Procedures, Coupon, 
  Prescriptions, Reviews, 
  Spezialization, schedule 
end note
@enduml